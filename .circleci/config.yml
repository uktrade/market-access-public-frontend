# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  codecov: codecov/codecov@3

jobs:
  tests:
    docker:
      - image: cimg/python:3.9.2-node
      - image: postgres:13
        environment:
          POSTGRES_DB: "market_access_public"
          POSTGRES_HOST_AUTH_METHOD: "trust"

    environment:
      DJANGO_SECRET_KEY: "secretkey123" # pragma: allowlist secret
      DJANGO_DEBUG: True
      DJANGO_ALLOWED_HOSTS: "localhost"
      DJANGO_SETTINGS_MODULE: "config.settings.test"
      DATABASE_URL: "postgresql://postgres@localhost/market_access_public"
      GTM_ID: ""
      GTM_AUTH: ""
      GTM_PREVIEW: ""
      PUBLIC_API_GATEWAY_BASE_URI: ""
      DIRECTORY_FORMS_API_BASE_URL: ""
      DIRECTORY_FORMS_API_API_KEY: ""
      DIRECTORY_FORMS_API_SENDER_ID: ""
      DIRECTORY_FORMS_API_DEFAULT_TIMEOUT: 60
      ZENDESK_SUBDOMAIN: "TEST_ZENDESK_SUBDOMAIN"

    working_directory: ~/market-access-public-frontend

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}

      - run:
          command: |
            pip install --upgrade pip
            pip install poetry==1.6.1

      - run:
          name: Compile webpack config
          command: npm install && npm run build

      - run:
          name: Install dependencies
          command: |
            poetry install

      - save_cache:
          key: v1-dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs

      - run:
          name: run tests & save coverage
          command: |
            poetry run pytest tests --cov=. --cov-report html
            poetry run coverage json

      - codecov/upload

      - store_artifacts:
          path: test-reports
          destination: test-reports

  format_and_secrets_checks:
    docker:
      - image: cimg/python:3.9.2-node
    working_directory: ~/market-access-public-frontend
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install --upgrade pip
            pip install poetry==1.6.1
            poetry install
            npm install --dev

      - run:
          command: pip install pre-commit

      - restore_cache:
          keys:
            - pre-commit-cache-{{ arch }}-{{ .Branch }}
      - run:
          name: Formatting checks
          command: pre-commit run --from-ref origin/HEAD --to-ref HEAD
      - save_cache:
          key: pre-commit-cache-{{ arch }}-{{ .Branch }}
          paths:
            - ~/.cache/pre-commit

  pep8:
    docker:
      - image: cimg/python:3.9.2-node

    working_directory: ~/market-access-public-frontend

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}

      - run:
          name: Install dependencies
          command: |
            pip install --upgrade pip
            pip install poetry==1.6.1
            poetry install

      - save_cache:
          key: v1-dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs

      - run: poetry run flake8 . --exclude=venv --count --max-line-length=120

workflows:
  version: 2
  test:
    jobs:
      - tests
      - pep8
      - format_and_secrets_checks
